# Створіть функцію <morse_code>, яка приймає на вхід рядок у вигляді коду Морзе та виводить декодоване значення (латинськими літерами).
# Особливості:
# - використовуються лише крапки, тире і пробіли (.- )
# - один пробіл означає нову літеру
# - три пробіли означають нове слово
# - результат може бути case-insensitive (на ваш розсуд - великими чи маленькими літерами).
# - для простоти реалізації - цифри, знаки пунктуації, дужки, лапки тощо використовуватися не будуть. Лише латинські літери.
# - додайте можливість декодування сервісного сигналу SOS (...---...)
# Приклад:
# --. . . -.- .... ..-- -...   .. ...   .... . .-. .

m = {'.-': 'A', '-...': 'B', '-.-.': 'C', '-..': 'D', '.': 'E', '..-.': 'F', '--.': 'G', '....': 'H', '..': 'I','.---': 'J', '-.-': 'K',
     '.-..': 'L', '--': 'M', '-.': 'N', '---': 'O', '.--.': 'P', '--.-': 'Q', '.-.': 'R', '...': 'S', '-': 'T', '..-': 'U', '...-': 'V',
     '.--': 'W', '-..-': 'X', '-.--': 'Y', '--..': 'Z', '   ': ' ', '... --- ...': 'SOS'}

def morse_code(string):
    a = []
    li = list(string.split("   "))
    for i in range(len(li)):
        li[i] = li[i].split(' ')
        b = ''.join(m[j]for j in li[i])
        a.append(b)
    return ' '.join(a)

print(morse_code(str(input('To decode: '))))
    
